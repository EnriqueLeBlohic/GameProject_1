//Get inputs
getControls();

//x Movement
	//Direction
	moveDir = rightKey - leftKey;
	
	//Get my face
	if moveDir != 0 { face = moveDir; };
	
	///SONIC movement speed
	
	// speed increase after 4 seconds
if moveDir != 0 && onGround 
{
    speedTimer++; 

    // if 240 frames was happen (4 seconds to 60 fps)
    if speedTimer >= 120
    {
        moveSpd = maxMoveSpd; 
		
    }
}
else 
{
    speedTimer = 0; // reset timer
    moveSpd = baseMoveSpd; // reset base time
}

	////SONIC running speed exit
	

	//Get xspd
	xspd = moveDir * moveSpd;

	//X collision
	var _subPixel = .5;
	if place_meeting(x + xspd, y, oWall)
	{
		var _pixelCheck = _subPixel * sign(xspd);
		while !place_meeting(x+ _pixelCheck, y, oWall)
		{
			x += _pixelCheck;
		}
	    xspd = 0;
	}

	//move
	x += xspd;
	
//Y Movement
    //Gravity
	
	if coyoteHangTimer >0
	{
		coyoteHangTimer--;
	
	} else {
	    yspd += grav;
		setOnGround(false);
	}
	

	
	//Reset or Prepare jumping variables
	if onGround
	{
		jumpCount = 0;
		coyoteJumptTimer = coyoteJumpFrames;
	}
	
	//Jump
	//if jumpKeyBuffered && onGround
	if jumpKeyBuffered && jumpCount < jumpMax
	{
		//Reset buffer
		jumpKeyBuffered = false;
		jumpKeyBufferTimer = 0;
		
		//set yspd to jump speed
		jumpCount++;
		
		yspd = jspd;
	}
	
	
	//////HOLDER//////
	
	if jumpKeyBuffered && jumpCount < jumpMax
	{
	   jumpKeyBuffered = false;
	   jumpKeyBufferTimer = 0;
	   jumpCount++;
	   jumpHoldTimer = jumpHoldFrames;
	   //TELL OURSELF WE ARE ENOT LONGER ON THE GROUND
	   setOnGround(false);
	   coyoteJumptTimer = 0;
	}
	//Cut off the jump by realeasing the jump button
	if !jumpKey
	{
		jumpHoldTimer = 0;
	}
	if jumpHoldTimer > 0
	{
	    yspd = jspd;
		jumpHoldTimer--;
	}
	
	
	//////HOLDER//////
	
	//Y Collision and movement
	//Cap falling speed
		if yspd > termVel { yspd = termVel; };
	
		//Collision
	
		//Y Collision
		var _subPixel = .5;
		if place_meeting(x, y + yspd, oWall)
		{
			//Scoot uip to the wall precisely
			var _pixelCheck = _subPixel * sign(yspd);
			while !place_meeting(x, y + _pixelCheck, oWall)
			{
				y +=_pixelCheck;
			}
			//set yspd to 0 to collide
			yspd = 0;
		}
		
		//Set if Im on the ground
	//VERDADERO SI ESTOY EN EL SUELO
	 //	if yspd >= 0 && place_meeting( x, y+1, oWall)
		//{
		//	onGround = true;
		//}else {
		   // onGround = false;
		//}
	//
		if yspd >= 0 && place_meeting( x, y+1, oWall)
		{
			setOnGround(true);
		}
		
		
		//Move
		y += yspd;
		
		
//SPRITE CONTROL
  if abs(xspd) > 0 { sprite_index = walkSpr; };
  
  
  if xspd == 0 { sprite_index = idleSpr; };
  
  if !onGround { sprite_index = jumpSpr; };
  
  if speedTimer  >= 120 {sprite_index = runSpr; };
  
     mask_index = maskSpr;
